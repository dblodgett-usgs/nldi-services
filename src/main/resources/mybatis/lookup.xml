<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lookup">


    <sql id="featureProperties">
        crawler_source.feature_type,
        crawler_source.source_suffix source,
        crawler_source.source_name,
        feature.identifier,
        feature.name,
        feature.uri,
        feature.comid,
        feature.reachcode,
        feature.measure,
        st_asgeojson(feature.location, 9, 0) shape
    </sql>

    <sql id="comidProperties">
        'comid' source,
        'NHDPlus comid' source_name,
        nhdflowline_np21.nhdplus_comid identifier,
        nhdflowline_np21.nhdplus_comid comid,
        st_asgeojson(nhdflowline_np21.shape, 9, 0) shape
    </sql>

    <sql id="selectFeatures">
        select
        <choose>
            <when test="featureSource == 'comid'">
                <include refid="lookup.comidProperties"/>
                <include refid="lookup.comidFromWhere"/>
            </when>
            <otherwise>
                <include refid="lookup.featureProperties"/>
                <include refid="lookup.featureFromWhere"/>
            </otherwise>
        </choose>
    </sql>


    <sql id="featureFromWhere">
         from nldi_data.feature
              join nldi_data.crawler_source
                on feature.crawler_source_id = crawler_source.crawler_source_id
        where identifier = #{featureID} and
              lower(source_suffix) = lower(#{featureSource})
    </sql>

    <sql id="comidFromWhere">
         from nhdplus.nhdflowline_np21
        where nhdplus_comid = #{featureID}::integer
    </sql>

    <select id="feature" resultType="java.util.LinkedHashMap">
        <choose>
            <when test="featureSource == 'comid'">
                select distinct nhdplus_comid comid
                  <include refid="lookup.comidFromWhere"/>
            </when>
            <otherwise>
                select distinct comid <if test="getMeasure == true">, measure</if>
                  <include refid="lookup.featureFromWhere"/>
            </otherwise>
        </choose>
    </select>

    <select id="reachCode" resultType="String">
        select distinct reachcode
        from nhdplus.nhdflowline_np21
        where nhdplus_comid = #{comid}::integer
    </select>

    <select id="measureEstimate" resultType="java.util.LinkedHashMap">
        select distinct
            fmeasure + (1 - st_linelocatepoint(shape,
                <choose>
                    <when test="lon != null and lat != null">
                        st_geomfromtext('POINT(${lon} ${lat})', 4269)
                    </when>
                    <otherwise>
                        location
                    </otherwise>
                </choose>
                )) * (tmeasure - fmeasure) measure
        from
            <choose>
                <when test="comid == null">
                    nldi_data.feature
                    join nldi_data.crawler_source
                        on feature.crawler_source_id = crawler_source.crawler_source_id
                    join nhdplus.nhdflowline_np21
                        on nhdflowline_np21.nhdplus_comid = feature.comid
                </when>
                <otherwise>
                    nhdplus.nhdflowline_np21
                </otherwise>
            </choose>
        where
            <choose>
                <when test="comid == null">
                    identifier = #{featureID}
                    and lower(source_suffix) = lower(#{featureSource})
                </when>
                <otherwise>
                    nhdplus_comid = #{comid}
                </otherwise>
            </choose>
    </select>

    <select id="dataSources" resultType="java.util.LinkedHashMap">
        select source_suffix source,
               source_name "sourceName",
               #{rootUrl,jdbcType=VARCHAR} || '/' || lower(source_suffix) features
          from nldi_data.crawler_source
             order by lower(source_suffix)
    </select>


    <select id="comidLatLon" resultType="integer">
        select featureid
          from nhdplus.catchmentsp
            where st_intersects(nhdplus.catchmentsp.the_geom,
              st_geomfromtext('POINT(${lon} ${lat})', 4269));
    </select>

    <select id="distanceFromFlowline" resultType="float">
        select st_distance(x.location, x.shape, false)
        from (
            select flow.shape, feat.location
            from nhdplus.nhdflowline_np21 flow
                inner join nldi_data.feature feat
                    on feat.comid = flow.nhdplus_comid
                        and feat.identifier = #{featureID}
                inner join nldi_data.crawler_source crawler
                    on crawler.source_suffix = #{featureSource}
                        and feat.crawler_source_id = crawler.crawler_source_id
        ) as x;
    </select>

    <select id="closestPointOnFlowline" resultType="java.util.LinkedHashMap">
        select st_y(result.point::geometry) as lat, st_x(result.point::geometry) as lon
        from (
            select st_closestpoint(x.shape, x.location) as point
            from (
                select flow.shape, feat.location
                from nhdplus.nhdflowline_np21 flow
                    inner join nldi_data.feature feat
                        on feat.comid = flow.nhdplus_comid
                        and feat.identifier = #{featureID}
                    inner join nldi_data.crawler_source crawler
                        on crawler.source_suffix = #{featureSource}
                        and feat.crawler_source_id = crawler.crawler_source_id
            ) as x
        ) as result;
    </select>

    <select id="featureLocation" resultType="java.util.LinkedHashMap">
        select st_y(result.location::geometry) as lat, st_x(result.location::geometry) as lon
        from (
            select distinct feat.location
                from nldi_data.feature feat
                inner join nldi_data.crawler_source crawler
                    on crawler.source_suffix = #{featureSource}
                    and feat.crawler_source_id = crawler.crawler_source_id
                where feat.identifier = #{featureID}
        ) as result;
    </select>


</mapper>
